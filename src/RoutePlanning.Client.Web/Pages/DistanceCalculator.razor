@page "/distancecalculator"
@using System.ComponentModel.DataAnnotations

<PageTitle>Distance Calculator</PageTitle>

<h1>Find route for your package</h1>
<hr/>

<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">



<PageTitle>Distance Calculator</PageTitle>

<div class="container">
    <div class="row">
        <div class="col-md-6">
            <LocationSelector Label="From:" Locations="@Locations" @bind-Selected="SelectedSource"></LocationSelector>
            <LocationSelector Label="To:" Locations="@Locations" @bind-Selected="SelectedDestination"></LocationSelector>



            <EditForm Model="@parcelModel">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="form-group">
                    <label class=" col-md-2" for="weight">Weight (kg):</label>
                    <InputNumber id="weight" class="col-md-8 form-control" @bind-Value="parcelModel.Weight" min="0" required />
                    <ValidationMessage For="@(() => parcelModel.Weight)" />
                </div>

                <div class="form-group">
                    <label class=" col-sm-2" for="height">Height (cm):</label>
                    <InputNumber id="height" class=" col-sm-8 form-control" @bind-Value="parcelModel.Height" min="0" required />
                    <ValidationMessage For="@(() => parcelModel.Height)" />
                </div>

                <div class="form-group">
                    <label class=" col-md-2" for="length">Length (cm):</label>
                    <InputNumber id="length" class=" col-md-8 form-control" @bind-Value="parcelModel.Length" min="0" required />
                    <ValidationMessage For="@(() => parcelModel.Length)" />
                </div>

                <div class="form-group">
                    <label class=" col-md-2" for="parcelType">Parcel Type:</label>
                    <InputSelect id="parcelType" class=" col-md-8 form-control" @bind-Value="parcelModel.ParcelType">
                        <option value="">Select parcel type</option>
                        <option value="Basic">Basic</option>
                        <option value="Recorded Delivery">Recorded Delivery</option>
                        <option value="Weapons">Weapons</option>
                        <option value="Live Animals">Live Animals</option>
                        <option value="Cautious Parcels">Cautious Parcels</option>
                        <option value="Refrigerated Goods">Refrigerated Goods</option>
                    </InputSelect>
                    <ValidationMessage For="@(() => parcelModel.ParcelType)" />
                </div>


                <button style="margin-bottom: 20px;" type="submit" @onclick="CalculateDistance" class="btn btn-primary">Book</button>

            </EditForm>

            

            @if (DisplayDistance is not null && parcelModel.Weight != 0 && parcelModel.Height != 0 && parcelModel.Weight != 0 &&  parcelModel.ParcelType is not null)
            {

                <span class="starred col-md-10 route alert alert-primary" style="display: flex; flex-direction: row; align-items: center; justify-content: space-between;">
                    <span>@DisplaySource</span>

                    <div style="display: flex; flex-direction: column; align-items: center;">
                    <span id="distance">@DisplayDistance hours</span>
                    <img src="Arrow.png" alt="Responsive image" class="img-fluid full-width">
                    <span id="price">Total price £@DisplayPrice</span>
                    </div>

                    <span>@DisplayDestination</span>
                </span>

                @inject NavigationManager NavigationManager

                <button style="margin-bottom: 10px;" class="btn btn-primary" @onclick="NavigateToOrderConfirmation">
                    Checkout
                </button>

                @code {
                private void NavigateToOrderConfirmation()
                {
                    NavigationManager.NavigateTo("/orderconfirmation");
                }
            }
            }
        
            
        </div>
        <div class="col-md-6">
            <img src="Image.jpg" alt="Responsive image" class="img-fluid full-width">
        </div>
    </div>
</div>

<br />


@code {
    public class ParcelModel
    {


        [Required]
        [Range(1, int.MaxValue, ErrorMessage = "Please enter a value bigger than {1}")]
        public double Weight { get; set; }

        [Required]
        [Range(1, int.MaxValue, ErrorMessage = "Please enter a value bigger than {1}")]
        public double Height { get; set; }

        [Required]
        [Range(1, int.MaxValue, ErrorMessage = "Please enter a value bigger than {1}")]
        public double Length { get; set; }

        [Required]
        public string? ParcelType { get; set; }

    }

    private ParcelModel parcelModel = new ParcelModel();
}